
# 1a. Select all columns from the actor table.
 ANS: SELECT * FROM ACTOR;


# 1b. Select only the last_name column from the actor table.
 ANS:SELECT LAST_NAME FROM ACTOR;


# 1c. Select only the following columns from the film table.

# COLUMN NAME           Note
# title                 Exists in film table.
# description           Exists in film table.
# rental_duration       Exists in film table.
# rental_rate           Exists in film table.
# total_rental_cost     rental_duration * rental_rate

 ANS: SELECT TITLE,DESCRIPTION, RENTAL_DURATION, RENTAL_RATE,(RENTAL_DURATION * RENTAL_RATE) AS TOTAL_RENTAL_COST 
      FROM FILM;


# 2a. Select all distinct (different) last names from the actor table.
 ANS: SELECT DISTINCT LAST_NAME  FROM ACTOR;


# 2b. Select all distinct (different) postal codes from the address table.
 ANS: SELECT DISTINCT POSTAL_CODE  FROM ADDRESS;


# 2c. Select all distinct (different) ratings from the film table.
 ANS:SELECT DISTINCT RATING  FROM FILM;


# 3a. Select the title, description, rating, movie length columns from the films table that last 3 hours or longer.
 ANS: SELECT  TITLE,DESCRIPTION, RATING,LENGTH  FROM FILM  WHERE LENGTH >=180;
 

# 3b. Select the payment id, amount, and payment date columns from the payments table for payments made on or after 05/27/2005.
 ANS: SELECT PAYMENT_ID, AMOUNT, PAYMENT_DATE  FROM PAYMENT  WHERE PAYMENT_DATE >= 05/27/2005;


# 3c. Select the primary key, amount, and payment date columns from the payment table for payments made on 05/27/2005.
 ANS: SELECT PAYMENT_ID, AMOUNT, PAYMENT_DATE  FROM PAYMENT WHERE PAYMENT_DATE='2005-05-27';


# 3d. Select all columns from the customer table for rows that have a last names beginning with S and a first names ending with N.
 ANS: SELECT * FROM CUSTOMER WHERE LAST_NAME LIKE "S%" AND FIRST_NAME LIKE "%N";


# 3e. Select all columns from the customer table for rows where the customer is inactive or has a last name beginning with "M".
 ANS: SELECT * FROM CUSTOMER  WHERE ACTIVE = 0 OR LAST_NAME LIKE "M%";


# 3f. Select all columns from the category table for rows where the primary key is greater than 4 and the name field begins with either C, S or T.
 ANS: SELECT * FROM CATEGORY WHERE CATEGORY_ID > 4 AND NAME LIKE "C%" OR NAME LIKE "S%" OR NAME LIKE "T%" ;


# 3g. Select all columns minus the password column from the staff table for rows that contain a password.
 ANS: SELECT * FROM STAFF WHERE PASSWORD IS NOT NULL;


# 3h. Select all columns minus the password column from the staff table for rows that do not contain a password.
 ANS: SELECT * FROM STAFF WHERE PASSWORD IS NULL;


## 4. IN operator
# 4a. Select the phone and district columns from the address table for addresses in California, England, Taipei, or West Java.
 ANS: SELECT PHONE,DISTRICT FROM ADDRESS WHERE DISTRICT IN ('CALIFORNIA','ENGLAND','TAIPEI','WEST JAVA');


# 4b. Select the payment id, amount, and payment date columns from the payment table for payments made on 05/25/2005, 05/27/2005, and 05/29/2005.
# (Use the IN operator and the DATE function, instead of the AND operator as in previous exercises.)
 ANS: SELECT PAYMENT_ID, AMOUNT, PAYMENT_DATE FROM PAYMENT WHERE PAYMENT_DATE IN ('2005-05-25','2005-05-27','2005-05-29');


# 4c. Select all columns from the film table for films rated G, PG-13 or NC-17.
 ANS: SELECT *FROM FILM  WHERE RATING IN ('G','PG-13','NC-17');


# 5a. Select all columns from the payment table for payments made between midnight 05/25/2005 and 1 second before midnight 05/26/2005.
 ANS: SELECT * FROM PAYMENT  WHERE PAYMENT_DATE BETWEEN '2005-05-25 00:00:00' AND '2005-05-26 23:59:59';


# 5b. Select the following columns from the film table for films where the length of the description is between 100 and 120.
# COLUMN NAME           Note
# title                 Exists in film table.
# description           Exists in film table.
# release_year          Exists in film table.
# total_rental_cost     rental_duration * rental_rate

 ANS: SELECT TITLE, DESCRIPTION ,RELEASE_YEAR ,(RENTAL_DURATION * RENTAL_RATE) AS TOTAL_RENTAL_COST
      FROM FILM WHERE LENGTH(DESCRIPTION) BETWEEN 100 AND 120;


# 6a. Select the following columns from the film table for rows where the description begins with "A Thoughtful".
# Title, Description, Release Year
 ANS: SELECT TITLE,DESCRIPTION, RELEASE_YEAR FROM FILM  WHERE DESCRIPTION LIKE "A THOUGHTFUL%";


# 6b. Select the following columns from the film table for rows where the description ends with the word "Boat".
# Title, Description, Rental Duration
 ANS: SELECT TITLE, DESCRIPTION, RENTAL_DURATION FROM FILM WHERE DESCRIPTION LIKE "%BOAT";


# 6c. Select the following columns from the film table where the description contains the word "Database" and the length of the film is greater than 3 hours.
# Title, Length, Description, Rental Rate
 ANS: SELECT TITLE, LENGTH, DESCRIPTION, RENTAL_RATE FROM FILM  WHERE DESCRIPTION LIKE "%DATABASE%" AND LENGTH >180;


# 7a. Select all columns from the payment table and only include the first 20 rows.
 ANS: SELECT * FROM PAYMENT LIMIT 20;


# 7b. Select the payment date and amount columns from the payment table for rows where the payment amount is greater than 5, 
      and only select rows whose zero-based index in the result set is between 1000-2000.
 ANS: SELECT PAYMENT_DATE, AMOUNT FROM PAYMENT WHERE AMOUNT > 5 LIMIT 1000, 1000;


# 7c. Select all columns from the customer table, limiting results to those where the zero-based index is between 101-200.
 ANS: SELECT * FROM CUSTOMER LIMIT 100,100;


# 8a. Select all columns from the film table and order rows by the length field in ascending order.
 ANS: SELECT * FROM FILM ORDER BY LENGTH;


# 8b. Select all distinct ratings from the film table ordered by rating in descending order.
 ANS: SELECT DISTINCT RATING FROM FILM  ORDER BY RATING DESC;


# 8c. Select the payment date and amount columns from the payment table for the first 20 payments ordered by payment amount in descending order.
 ANS: SELECT PAYMENT_DATE,AMOUNT FROM PAYMENT ORDER BY AMOUNT DESC LIMIT 20;


# 8d. Select the title, description, special features, length, and rental duration columns from the film table for the first 10 films 
      with behind the scenes footage under 2 hours in length and a rental duration between 5 and 7 days, ordered by length in descending order.
 ANS: SELECT TITLE, DESCRIPTION, SPECIAL_FEATURES, LENGTH, RENTAL_DURATION FROM FILM WHERE SPECIAL_FEATURES LIKE "%BEHIND THE SCENES%" AND LENGTH <120 AND
      RENTAL_DURATION BETWEEN 5 AND 7 ORDER BY LENGTH DESC LIMIT 10;


# 9a. Select customer first_name/last_name and actor first_name/last_name columns from performing a /left join/ 
# between the customer and actor column on the last_name column in each table. 
# (i.e. `customer.last_name = actor.last_name`)
# Label customer first_name/last_name columns as customer_first_name/customer_last_name
# Label actor first_name/last_name columns in a similar fashion.

 ANS:SELECT C.FIRST_NAME AS CUSTOMER_FIRST_NAME,C.LAST_NAME AS CUSTOMER_LAST_NAME,A.FIRST_NAME AS ACTOR_FIRST_NAME,A.LAST_NAME AS ACTOR_LAST_NAME 
     FROM CUSTOMER C LEFT JOIN ACTOR A ON C.LAST_NAME =A.LAST_NAME;


# 9b. Select the customer first_name/last_name and actor first_name/last_name columns from performing a /right join between the customer and
      actor column on the last_name column in each table. (i.e. `customer.last_name = actor.last_name`)
 ANS: SELECT C.FIRST_NAME, C.LAST_NAME, A.FIRST_NAME, A.LAST_NAME FROM CUSTOMER C RIGHT JOIN ACTOR A ON C.LAST_NAME = A.LAST_NAME;


# 9c. Select the customer first_name/last_name and actor first_name/last_name columns from performing 
      an inner join between the customer and actor column on the last_name column in each table. (i.e. `customer.last_name = actor.last_name`)
 ANS: SELECT C.FIRST_NAME,C.LAST_NAME,A.FIRST_NAME,A.LAST_NAME FROM CUSTOMER C INNER JOIN ACTOR A ON C.LAST_NAME = A.LAST_NAME;


# 9d. Select the city name and country name columns from the city table, performing a left join with the country table to get the country name column.
 ANS: SELECT CITY.CITY,COUNTRY.COUNTRY FROM CITY LEFT JOIN COUNTRY ON CITY.COUNTRY_ID = COUNTRY.COUNTRY_ID;


# 9e. Select the title, description, release year, and language name columns from the film table, performing a left join with the language table to get the "language" column.
# Label the language.name column as "language" (e.g. `select language.name as language`)
 ANS: SELECT TITLE, DESCRIPTION, RELEASE_YEAR, LANGUAGE.NAME AS LANGUAGE FROM FILM LEFT JOIN LANGUAGE ON FILM.LANGUAGE_ID = LANGUAGE.LANGUAGE_ID;


# 9f. Select the first_name, last_name, address, address2, city name, district, and postal code columns from the staff table, 
      performing 2 left joins with the address table then the city table to get the address and city related columns.
 ANS: SELECT S.FIRST_NAME,S.LAST_NAME,A.ADDRESS,A.ADDRESS2,C.CITY,A.DISTRICT,A.POSTAL_CODE 
      FROM STAFF S LEFT JOIN ADDRESS A ON S.ADDRESS_ID = A.ADDRESS_ID LEFT JOIN CITY C ON A.CITY_ID = C.CITY_ID;











  