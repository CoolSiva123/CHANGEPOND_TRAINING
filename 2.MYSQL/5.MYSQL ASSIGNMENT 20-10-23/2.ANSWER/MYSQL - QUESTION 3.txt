--3.1 Select all warehouses.
  ANS:SELECT * FROM WAREHOUSES;


--3.2 Select all boxes with a value larger than $150.
  ANS:SELECT * FROM BOXES WHERE VALUE > 150;


--3.3 Select all distinct contents in all the boxes.
  ANS:SELECT DISTINCT CONTENTS FROM BOXES;


--3.4 Select the average value of all the boxes.
  ANS:SELECT AVG(VALUE) FROM BOXES;


--3.5 Select the warehouse code and the average value of the boxes in each warehouse.
  ANS:SELECT WAREHOUSE,AVG(VALUE) FROM BOXES GROUP BY WAREHOUSE;


--3.6 Same as previous exercise, but select only those warehouses where the average value of the boxes is greater than 150.
  ANS:SELECT WAREHOUSE,AVG(VALUE) FROM BOXES GROUP BY WAREHOUSE HAVING AVG(VALUE)>150;


--3.7 Select the code of each box, along with the name of the city the box is located in.
  ANS:SELECT B.CODE,LOCATION FROM BOXES B,WAREHOUSES W WHERE B.WAREHOUSE=W.CODE;


--3.8 Select the warehouse codes, along with the number of boxes in each warehouse.--Optionally, take into account that some warehouses are empty (i.e., the box count should show up as zero, instead of omitting the warehouse from the result).
  ANS:SELECT WAREHOUSE,COUNT(*) AS NO_OF_BOXES FROM BOXES GROUP BY WAREHOUSE;


--3.9 Select the codes of all warehouses that are saturated (a warehouse is saturated if the number of boxes in it is larger than the warehouse's capacity).
  ANS:SELECT W.CODE,W.CAPACITY,B.WAREHOUSE FROM BOXES B,WAREHOUSES W WHERE B.WAREHOUSE=W.CODE GROUP BY W.CODE,W.CAPACITY HAVING COUNT(W.CODE)>W.CAPACITY;


--3.10 Select the codes of all the boxes located in Chicago.
  ANS:SELECT CODE FROM BOXES WHERE WAREHOUSE IN (SELECT CODE FROM WAREHOUSES WHERE LOCATION='CHICAGO');


--3.11 Create a new warehouse in New York with a capacity for 3 boxes.
  ANS:INSERT INTO WAREHOUSES VALUES(6,'New York',3);


--3.12 Create a new box, with code "H5RT", containing "Papers" with a value of $200, and located in warehouse 2.
  ANS:INSERT INTO BOXES  VALUES ('H5RT','Papers',200,2);


--3.13 Reduce the value of all boxes by 15%.
  ANS:UPDATE BOXES SET VALUE=VALUE-(VALUE*0.15);


--3.14 Remove all boxes with a value lower than $100.
  ANS:DELETE FROM BOXES WHERE VALUE < 100;


--3.15 Remove all boxes from saturated warehouses.
  ANS:DELETE FROM BOXES WHERE WAREHOUSE IN (SELECT * FROM (SELECT CODE FROM WAREHOUSES WHERE CAPACITY < (SELECT COUNT(*) FROM BOXES WHERE WAREHOUSE=WAREHOUSES.CODE))AS BXS);


--3.16 Add Index for column "Warehouse" in table "boxes" -- !!!NOTE!!!: index should NOT be used on small tables in practice
  ANS:ALTER TABLE BOXES ADD INDEX IDX_WAREHOUSE (WAREHOUSE);


--3.17 Print all the existing indexes -- !!!NOTE!!!: index should NOT be used on small tables in practice
  ANS:SHOW INDEXES FROM BOXES;


--3.18 Remove (drop) the index you added just -- !!!NOTE!!!: index should NOT be used on small tables in practice
  ANS:DROP INDEX IND_WAREHOUSE ON BOXES;





